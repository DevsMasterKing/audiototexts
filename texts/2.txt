 Today I own creating my own games website. You see I am not really a professional programmer, but with the Meta Yoda Editor, I can do it for sure. I want to update the main menu and add there a new item called Games. For this I go into the menu resource and open the Editor. Let's replace this link from the default template with my Games link, which will be slash games in the URL. Now let's create the page. I add a new resource with the title games. The name is Games and this is why I can access the resource with slash games in the URL. The type is Tag and the project website. Now I need to make sure my users have access to this new page, because all resources are secured by default. Back in the Editor view I am going to create a new file for the HTML code. I am going to create a title with the HTML tag H1, the title of the page is Games. Now I want to see if my website was really updated with the new content I created. I will also update the title of my home site to make sure the users know my pages about gaming. Let's check if the title of the home site was also updated. It says my Games website. Great. Since I am not the best programmer who wants to outsource the creation of the game's list to a professional programmer. For this I switched to the task you to create a new public offer for this task. I describe in the text field what the programmer should do, so just do all the programming for the game's list. It's not such a complex task. I am sure some programmers in Myanmar or Pakistan or India would do this for one US dollar, so I set the price to $1. The skill needed for this task is programming. You can also outsource on the types of tasks. In the list the task is now visible when I go to the task detail of you by clicking on it. The task is now waiting for verification, which means that another worker will verify this task to check if it is a valid task. This is how the interface looks from the perspective of the verifier. He sees a list of tasks that are waiting for verification. He can pick one and check the task details. He has two options. Approved the task. Are rejected. Okay. The verifier now approved the task. The task has now the state searching for worker, which means all the registered workers will receive an email. You see the list of tasks searching for a worker. You see the reward from my task is one coin. This is how the interface looks from a worker. You see that the worker has chosen another background picture than a half. The button take on the task means that the worker wants to complete this task for the offered money. Now the buttons appeared, for example, the log in the task environment button. He clicked the button and now a new server is created and all the resources copied that are needed to complete this task. So the game's list in this case. The programmer has no access to the entire website, just the game's list and the dependencies. The programmer is now logged into the task environment, which means he is connected to a server where all the necessary resources have been copied to work on this task. Now the programmer switches to the game's list in the search bar. Of course, this could be implemented with JavaScript, but the programmer decides to rename the file to HTML.php. So PHP code can be directly used in the HTML code. The programmer uses the DBGit all function to get all the games. And now the programmer is using the PHP for each loop to cycle through all the games and output them. So the programmer is doing his work. It cannot break your website because he works on another server in a sandbox with no access to your customer data or to other pages. The programmer's mostly does not even know for which page or customer he is working. You see in the dependencies view exactly which resources are sent to the programmer. And the programmer loses access to these sources after completing the task. It was a really good idea to outsource this programming. This saved me a lot of time. The programmer seems to be finished with coding. When the programmer clicks the website link, you see that he just sees the default page and the resources copy for this task. So he does not see my original home site where I changed the title. Back in the task view, the programmer can now log out from the task environment. And since the work has been successful, he submits this for review. This is the view from another worker. The reviewer, he clicks on the link waiting for review to see all the tasks which are waiting for review. In the task detail view, he clicks on start review to start checking what the programmer coded. Now he also has a link log in the task environment where he can log into the sandbox where the programmer did the work. The reviewer switches now to this server. Now he can check and also update the code of necessary like the programmer. Or he can see a list of changes where he sees line by line what the programmer exactly did. So in the HTML file, he seemed to have deleted all the lines since they were moved to the HTML.php file. The code looks good, some valid PHP code which outputs a list of games. Now the reviewer switches back to the task view to approve this work, which just states that the code is curved and the programmer did not broke anything. Of course, the reviewer would also test the change to make sure the new component works. In the action drop down, he selects review successful. The reviewer also writes a feedback to the programmer that is visible to both the task owner and the programmer. The reviewer writes very good as a feedback and two Chinese characters which also mean good. In the rating drop down, the Chinese reviewer selects perfect. Now the reviewer clicks on submit review. So the owner will be notified in an email that the work has been finished. This is again the perspective for my account. In on task, I see all the tasks that I have created and I see that the programmer list with games task is successful. But it has not yet been integrated into my website since I may want to test it by myself. But in this case, I am going to trust the reviewer and just click the integrate change button. You see that Medellota automated the entire project management workflow and when I now switch to the games page, I see that the code has been integrated. It's so super easy to create a task and all the work of programming and testing is outsourced. Please visit our website www.medellota.com and register on our website. Thank you for watching this tutorial. If you have any questions, please leave a comment. I will see you in the next video. Bye.