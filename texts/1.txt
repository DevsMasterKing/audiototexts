 Welcome to another great MetaYoda tutorial. Learn how to create a web server, create a form, a database table, and integrate signing with Google and just around 5 minutes. I am now renting web server for 3 months. I enter a title and select a server location, Germany of course. In the software drop down I select MetaYoda PhD engine. It takes around 1 to 2 minutes for the server to be installed. The server is now ready. I log in by clicking on the server name, and now I scroll down to the website link to check out the default page. There is a link on the home site that takes me right back to the editor to edit the home site. My goal is now to create a newsletter. I use the component form.resource, which is a form generator for the subscribe form. The parameters for this resource are label, which is the title, Submit label, which is the button title. The Submit event is a JavaScript that gets called when the user click the button and resource type. To define from where the form generator should take the form fields. In the parameter resource type I type in newsletter, that will be the database table where the newsletter subscribers will be saved. I save the resource and see that there is a message box appearing on the bottom right. I am missing some dependencies. The editor will fix that automatically. Now let's create the database table for the newsletter. I enter a title and the name is the same I enter into the resource type parameter before. Type is of course database table and the project is website. The system suggests me I should check the access panel and add access right so the form generator is able to download the parameter information. Now I am going to have the parameters. In case the resource is a database table, the parameters are also the columns of the database table. The first parameter is the name of the newsletter subscriber and this of type text. The second parameter is the email address. It would also be possible to add validators here so the system checks if the entered value is valid. Also many other useful options. Because I selected the type database table it is possible that the system creates for me automatically the database. For this I need to click the create database table button. Now let's switch back again to the home resource in the editor. In one of the parameters of the form.ResourceFormGenerator I am then calling the JavaScript Subscribe function which is not yet programmed. Let's see how the form currently looks and what happens if I fill in some values into the form. So I just fill in the first name and click on subscribe. Now an error happened because the function is not yet implemented. The editor shows me the exact place where the error happened. I create now a new JavaScript class from my home site and implement the subscribe function there. With the resource.call you can send data to the server. I will also create now the phg file to save the data I received from JavaScript to the database. This is just one line of code. With the dbnser function the first parameter is the database table name. And the second parameter is the data. Now let's test again by clicking on the preview button. I'll know again an error happened. This time I forgot to give the user access to make server calls on this resource. But the editor is taking me right where the error happened so I can fix it. I think I'm finished implementing this feature. Let's test it and see if the enter data is really going to be saved in the database. Okay, nothing happened when I click on save. The data is surely saved. But there is no feedback. So let's add an alert box when the user subscribed to the newsletter. I'm just using the default JavaScript alert function here. But of course, MetaYode also delivers components that show a nicer alert window. I will add myself to the newsletter again by entering my name and mail address. Now there should be two rows in the database because I filled in the form twice. I do not need PHP Miami to administer the database. I can also do this with the integrated database editor. Here I could edit a row and change the name into Nash2 for example. There is also a search box and I could restrict the results to Nash2 again. I will shortly implement a sign in with Google button where people can register and login with the Google button to my new website. For this I need to download a component from the MetaYode library. There are tons of components. I just scroll down to find the component and click the download button to install it. The component is now installed and I can already use it. So I will go back to the home site to add it there. I just type Google sign in which is the name of the component and click save. Again the message appears that I should add this to the dependencies and I will do this. And another warning appears. I must allow the user to view the sign in with Google button and I will do this in the access control. The editor helps me a lot. So this is the standalone view of the sign in with Google button and this is how it looks integrated into my home site. The MetaYode editor is super easy to use and speeds up development time of websites and web apps. Watch more tutorials on YouTube and register on MetaYode.com.